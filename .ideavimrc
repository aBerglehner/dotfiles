let mapleader = " "
set number relativenumber
set idearefactormode=keep
set surround
set ideajoin
set scrolloff=14
set colorcolumn=120


set ignorecase
set smartcase
set ideamarks
set ideaput
set incsearch=true
set hlsearch=false

nnoremap <C-d> 20j zz
nnoremap <C-u> 20k zz
vnoremap <C-d> 20j zz
vnoremap <C-u> 20k zz

nmap n nzzzv
nmap N Nzzzv


vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>p "+p
vmap <leader>P "+P
vmap <leader>P "+P


/*
to find vim shortcuts
:actionlist
:actionlist replace
 */



nmap H :action PreviousTab<CR>
nmap L :action NextTab<CR>
nmap <leader>bd :action CloseEditor<CR>

nmap <leader><leader> :action GotoFile<CR>
nmap <leader>/ :action FindInPath<CR>
nmap <leader>sg :action FindInPath<CR>
nmap <leader>fr :action RecentFiles<CR>
nmap <leader>sl :action RecentLocations<CR>
nmap <leader>sr :action ReplaceInPath<CR>

nmap <leader>fd :action ActivateDatabaseToolWindow<CR>

nmap <C-a> :action ShowBookmarks<CR>
nmap <leader>a :action ToggleBookmark<CR>

nmap <leader>g :action Generate<CR>
nmap <leader>r <Action>(Refactorings.QuickListPopupAction)<CR>

nmap gI :action GotoImplementation<CR>

nmap ]e :action GotoNextError<CR>
nmap [e :action GotoPreviousError<CR>



set NERDTree
let g:NERDTreeMapJumpParent='h'
nnoremap <leader>e :NERDTreeToggle<CR>
nnoremap <C-h> :NERDTreeFocus<CR>
vnoremap <leader>e :NERDTreeToggle<CR>
vnoremap <C-h> :NERDTreeFocus<CR>


set highlightedyank
let g:highlightedyank_highlight_duration = "600"

